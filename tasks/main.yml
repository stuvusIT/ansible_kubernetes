---
- name: Check that installed minor version (if any) equals {{ kubernetes_version }}
  shell: |-
    line="$(apt-cache policy {{ item | quote }} | grep '  Installed: ')"
    if [ $? -ne 0 ] || [ "$line" = "  Installed: (none)" ]; then exit 0; fi # Uninstalled is ok.
    version="$(printf "$line" | awk -F '[ .]' '{print $4"."$5}')"
    if [ "$version" != {{ kubernetes_version | quote }} ]; then
      >&2 echo "Error: installed "{{ item | quote }}" minor version $version does not match "{{ kubernetes_version | quote }}". This role only supports patch upgrades."
      exit 1
    fi
  loop:
    - kubelet
    - kubeadm
    - kubectl
  changed_when: false

- name: Configure kernel modules
  copy:
    dest: /etc/modules-load.d/kubernetes.conf
    content: |
      {% for module in kubernetes_kernel_modules %}
      {{ module }}
      {% endfor %}

- name: Load kernel modules
  modprobe:
    name: "{{ item }}"
    state: present
  loop: "{{ kubernetes_kernel_modules }}"

- name: Configure sysctl
  copy:
    dest: /etc/sysctl.d/kubernetes.conf
    content: |
      net.bridge.bridge-nf-call-iptables = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.ipv4.ip_forward = 1
      net.ipv6.conf.all.forwarding = 1

- name: Load sysctl
  command: sysctl -p /etc/sysctl.d/kubernetes.conf
  changed_when: false

- name: Add Kubernetes apt key
  apt_key:
    url: https://pkgs.k8s.io/core:/stable:/v{{kubernetes_version}}/deb/Release.key

- name: Add kubernetes apt repository
  copy:
    mode: 0644
    remote_src: true
    dest: /etc/apt/sources.list.d/kubernetes.list
    content: |
      deb https://pkgs.k8s.io/core:/stable:/v{{kubernetes_version}}/deb/ /
  register: kubernetes_apt_repo_task

- name: apt update
  apt:
    update_cache: yes
  when: kubernetes_apt_repo_task.changed

- name: Pin required packages
  copy:
    content: |
      Package: {{ item }}
      Pin: version {{ kubernetes_version }}.*
      Pin-Priority: 1000
    dest: /etc/apt/preferences.d/{{ item }}
  loop:
    - kubelet
    - kubeadm
    - kubectl

- name: Check that candidate minor version equals {{ kubernetes_version }}
  shell: |-
    line="$(apt-cache policy {{ item | quote }} | grep '  Candidate: ')"
    if [ $? -ne 0 ]; then
      >&2 echo "Error: no installation candidate for "{{ item | quote }}
      exit 2
    fi
    version="$(printf "$line" | awk -F '[ .]' '{print $4"."$5}')"
    if [ "$version" != {{ kubernetes_version | quote }} ]; then
      >&2 echo "Error: candidate "{{ item | quote }}" minor version $version does not match "{{ kubernetes_version | quote }}". Something is wrong with your pinning setup."
      exit 1
    fi
  loop:
    - kubelet
    - kubeadm
    - kubectl
  changed_when: false

- name: Install required packages
  apt:
    name:
      - kubelet
      - kubeadm
      - kubectl
